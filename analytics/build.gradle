apply plugin: 'com.android.library'

android {
    def sdk = rootProject.ext.sdk
    compileSdkVersion sdk.compileSdkVersion

    defaultConfig {

        minSdkVersion sdk.minSdkVersion
        targetSdkVersion sdk.targetSdkVersion

        def versions = rootProject.ext.versions
        versionCode versions.sampleVersionCode
        versionName versions.sampleVersionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    def deps = rootProject.ext.deps
    implementation deps.appcompat

    testImplementation deps.junit
    androidTestImplementation deps.espressoCore
    androidTestImplementation deps.runner
}

task jarFramework(
        type: Jar,
        dependsOn: ['assembleRelease']) {
    archiveName = "analytics.jar"

    exclude('**/R.class')
    exclude('**/R$*.class')
    exclude('**/BuildConfig.class')
    exclude('**/BuildConfig$*.class')
    exclude('android/')

    from 'build/intermediates/classes/release'
}

task jarMobileLib(
        type: Jar,
        dependsOn: ['assembleRelease']) {
    archiveName = "analytics-mobile.jar"

    exclude('**/R.class')
    exclude('**/R$*.class')
    exclude('**/BuildConfig.class')
    exclude('**/BuildConfig$*.class')
    exclude('android/')

    exclude('**/AnalyticsKit.class')
    exclude('**/AnalyticsKit$*.class')
    exclude('**/ProviderAnalyticsProxy.class')
    exclude('**/ProviderAnalyticsProxy$*.class')

    from 'build/intermediates/classes/release'
}